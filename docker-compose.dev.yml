name: menu-app

services:
  postgres:
    image: postgres:16-alpine
    ports:
      - 5432:5432
    environment:
      POSTGRES_DB: menu_app
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - menu-app
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d menu_app"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  api:
    build:
      context: ./nst-backend
      target: development
    restart: unless-stopped
    env_file: ./nst-backend/.env
    volumes:
      - ./nst-backend:/app
      - /app/node_modules
    networks:
      - menu-app
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - 3001:3001
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "wget --no-verbose --tries=1 --spider http://localhost:3001/health || exit 1",
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  frontend:
    build:
      context: ./nxt-frontend
      target: development
    restart: unless-stopped
    env_file: ./nxt-frontend/.env
    volumes:
      - ./nxt-frontend:/app
      - /app/node_modules
    networks:
      - menu-app
    command:
      ["npm", "run", "dev", "--", "--hostname", "0.0.0.0", "--port", "3000"]
    ports:
      - 3000:3000
    depends_on:
      api:
        condition: service_healthy

  caddy:
    image: caddy:2-alpine
    ports:
      - 80:80
    volumes:
      - ./caddy/Caddyfile.dev:/etc/caddy/Caddyfile
      - caddy_data:/data
      - caddy_config:/config
    networks:
      - menu-app
    depends_on:
      - api
      - frontend

volumes:
  postgres_data:
  caddy_data:
  caddy_config:
networks:
  menu-app:
    driver: bridge
