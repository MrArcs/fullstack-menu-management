name: menu-app

services:
  postgres:
    image: postgres:16-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-menu_app}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - menu-app
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "pg_isready -U ${POSTGRES_USER:-postgres} -d ${POSTGRES_DB:-menu_app}",
        ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  api:
    build:
      context: ./nst-backend
      target: production
    restart: unless-stopped
    env_file: ./nst-backend/.env
    environment:
      DOMAIN_NAME: ${DOMAIN_NAME}
      NODE_ENV: production
    networks:
      - menu-app
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "wget --no-verbose --tries=1 --spider http://localhost:3001/health || exit 1",
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  frontend:
    build:
      context: ./nxt-frontend
      target: production
      args:
        NEXT_PUBLIC_API_URL: https://menuapi.designervenkat.online/api/v1
    restart: unless-stopped
    environment:
      NODE_ENV: production
    networks:
      - menu-app
    depends_on:
      api:
        condition: service_healthy
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "wget --no-verbose --tries=1 --spider http://localhost:3000 || exit 1",
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  caddy:
    build:
      context: ./caddy
      dockerfile: Dockerfile
    ports:
      - 80:80
      - 443:443
    environment:
      DOMAIN_NAME: ${DOMAIN_NAME}
    volumes:
      - caddy_data:/data
      - caddy_config:/config
    networks:
      - menu-app
    depends_on:
      frontend:
        condition: service_healthy
      api:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "wget --no-verbose --tries=1 --spider http://localhost:80 || exit 1",
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

volumes:
  postgres_data:
  caddy_data:
  caddy_config:
networks:
  menu-app:
    driver: bridge
